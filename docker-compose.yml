version: '2.4'
services:
  vpn:
    container_name: vpn
    image: dperson/openvpn-client:latest
    cap_add:
      - net_admin # required to modify network interfaces
    restart: unless-stopped
    volumes:
      - /dev/net:/dev/net:z # tun device
      - ${ROOT}/config/vpn:/vpn # OpenVPN configuration
    security_opt:
      - label:disable
    ports:
      - 8112:8112 # port for deluge web UI to be reachable from local network
      - 9117:9117 # port for jackett web UI to be reachable from local network
    dns:
      - 1.1.1.1
      - 1.0.0.1
    command: '-f "" -r 192.168.1.0/24' # enable firewall and route local network traffic

  deluge:
    container_name: deluge
    image: btafoya/docker-deluge:latest
    restart: unless-stopped
    network_mode: service:vpn # run on the vpn network
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - ${ROOT}/downloads:/downloads # downloads folder
      - ${ROOT}/config/deluge:/config # config files
    depends_on:
      - vpn

  jackett:
    container_name: jackett
    image: btafoya/docker-jackett:latest
    restart: unless-stopped
    network_mode: service:vpn
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${ROOT}/downloads/torrent-blackhole:/downloads # place where to put .torrent files for manual download
      - ${ROOT}/config/jackett:/config # config files
    depends_on:
      - vpn

  nzbget:
    container_name: nzbget
    image: linuxserver/nzbget:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - ${ROOT}/downloads:/downloads # download folder
      - ${ROOT}/config/nzbget:/config # config files

  watchtower:
    image: v2tec/watchtower
    container_name: watchtower
    restart: unless-stopped
    environment:
        - TZ=${TZ}
        - PUID=${PUID}
        - PGID=${PGID}
        - WATCHTOWER_NOTIFICATIONS=email
        - WATCHTOWER_NOTIFICATION_EMAIL_FROM=${SMTP_FROM}
        - WATCHTOWER_NOTIFICATION_EMAIL_TO=${SMTP_FROM}
        - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=${SMTP_SERVER}
        - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=${SMTP_PORT}
        - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=${SMTP_USER}
        - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=${SMTP_PASS}
    volumes:
        - '/var/run/docker.sock:/var/run/docker.sock'
        - '/etc/ssl/certs:/etc/ssl/certs'
    command: --schedule @midnight --cleanup
    labels:
        - 'traefik.enable=false'

  muximux:
    image: linuxserver/muximux
    container_name: muximux
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - ${ROOT}/config/muximux:/config
    ports:
      - 80:80
    restart: unless-stopped

  hydra2:
    image: linuxserver/hydra2
    container_name: hydra2
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - ${ROOT}/config/hydra:/config
      - ${ROOT}/downloads:/downloads
    ports:
      - 5076:5076
    restart: unless-stopped

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${ROOT}/config/sonarr:/config # config files
      - ${ROOT}/complete/tv:/tv # tv shows folder
      - ${ROOT}/downloads:/downloads # download folder
    depends_on:
      - jackett
      - deluge
      - nzbget

  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${ROOT}/config/radarr:/config # config files
      - ${ROOT}/complete/movies:/movies # movies folder
      - ${ROOT}/downloads:/downloads # download folder
    depends_on:
      - jackett
      - deluge
      - nzbget

  plex-server:
    container_name: plex-server
    image: plexinc/pms-docker:latest
    restart: unless-stopped
    environment:
      - TZ=${TZ} # timezone, defined in .env
    network_mode: host
    volumes:
      - ${ROOT}/config/plex/db:/config # plex database
      - ${ROOT}/config/plex/transcode:/transcode # temp transcoded files
      - ${ROOT}/complete:/data # media library

  bazarr:
    container_name: bazarr
    image: linuxserver/bazarr
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TV} # timezone, defined in .env
      - UMASK_SET=022 #optional
    volumes:
      - ${ROOT}/config/bazarr:/config # config files
      - ${ROOT}/complete/movies:/movies # movies folder
      - ${ROOT}/complete/tv:/tv # tv shows folder
    ports:
      - 6767:6767

  ombi:
    image: linuxserver/ombi
    container_name: ombi
    environment:
      - PUID=${PGID}
      - PGID=${PGID}
      - TZ=${TV}
      - BASE_URL=/ombi #optional
    volumes:
      - /path/to/appdata/config:/config
    ports:
      - 3579:3579
    restart: unless-stopped
    network_mode: host
